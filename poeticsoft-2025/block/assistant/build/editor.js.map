{"version":3,"file":"editor.js","mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D,E;;;;;;;;;;;;;ACNA,IAAQA,EAAE,GAAKC,EAAE,CAACC,IAAI,CAAdF,EAAE;AACV,IAAQG,iBAAiB,GAAKF,EAAE,CAACG,MAAM,CAA/BD,iBAAiB;AACzB,IAAAE,eAAA,GAIIJ,EAAE,CAACK,WAAW;EAHhBC,aAAa,GAAAF,eAAA,CAAbE,aAAa;EACbC,QAAQ,GAAAH,eAAA,CAARG,QAAQ;EACRC,cAAc,GAAAJ,eAAA,CAAdI,cAAc;AAEhB,IACEC,MAAM,GACJT,EAAE,CAACU,UAAU,CADfD,MAAM;AAE2C;AAC7B;AAEtB,IAAMG,IAAI,GAAG,SAAPA,IAAIA,CAAAC,IAAA,EAAsC;EAAA,IAAhCC,UAAU,GAAAD,IAAA,CAAVC,UAAU;IAAEC,aAAa,GAAAF,IAAA,CAAbE,aAAa;EAEvC,IAAMC,UAAU,GAAGV,aAAa,CAAC,CAAC;EAClC,IACEW,GAAG,GAGDH,UAAU,CAHZG,GAAG;IACHC,OAAO,GAELJ,UAAU,CAFZI,OAAO;IACPC,QAAQ,GACNL,UAAU,CADZK,QAAQ;EAGV,oBACIC,KAAA,CAAAC,aAAA,QAASL,UAAU,eACjBI,KAAA,CAAAC,aAAA;IAAKC,SAAS,EAAC;EAAK,GACjBvB,EAAE,CAAC,cAAc,EAAE,YAAY,CAAC,eACjCqB,KAAA,CAAAC,aAAA;IAAGE,IAAI,EAAEN,GAAI;IAACO,MAAM,EAAC,QAAQ;IAACC,GAAG,EAAC;EAAqB,GAAER,GAAO,CAAC,eACjEG,KAAA,CAAAC,aAAA,CAACb,cAAc;IACbS,GAAG,EAAEA,GAAI;IACTS,QAAQ,EAAE,SAAVA,QAAQA,CAAGC,MAAM,EAAEC,IAAI;MAAA,OAAKb,aAAa,CAAC;QAAEE,GAAG,EAAEU;MAAO,CAAC,CAAC;IAAA;EAAC,CAC5D,CACE,CAAC,eACNP,KAAA,CAAAC,aAAA,CAACd,QAAQ;IACPsB,OAAO,EAAC,GAAG;IACXC,KAAK,EAAGZ,OAAS;IACjBQ,QAAQ,EAAE,SAAVA,QAAQA,CAAGK,UAAU;MAAA,OAAKhB,aAAa,CAAC;QAAEG,OAAO,EAAEa;MAAW,CAAC,CAAC;IAAA,CAAC;IACjEC,WAAW,EAAEjC,EAAE,CAAC,kBAAkB,EAAE,YAAY;EAAE,CACnD,CAAC,eACFqB,KAAA,CAAAC,aAAA,CAACd,QAAQ;IACPsB,OAAO,EAAC,GAAG;IACXC,KAAK,EAAGX,QAAU;IAClBO,QAAQ,EAAE,SAAVA,QAAQA,CAAGO,WAAW;MAAA,OAAKlB,aAAa,CAAC;QAAEI,QAAQ,EAAEc;MAAY,CAAC,CAAC;IAAA,CAAC;IACpED,WAAW,EAAEjC,EAAE,CAAC,cAAc,EAAE,YAAY;EAAE,CAC/C,CACE,CAAC;AAEZ,CAAC;AAEDG,iBAAiB,CACfS,8DAAa,EACb;EACEwB,IAAI,EAAEvB,IAAI;EACVwB,IAAI,EAAE,SAANA,IAAIA,CAAA;IAAA,OAAQ,IAAI;EAAA;AAClB,CACF,CAAC,C","sources":["webpack://Poeticsoft 2025 Plugin/./src/block/basegemini/editor.scss?4d1f","webpack://Poeticsoft 2025 Plugin/webpack/bootstrap","webpack://Poeticsoft 2025 Plugin/webpack/runtime/make namespace object","webpack://Poeticsoft 2025 Plugin/./src/block/basegemini/editor.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport {};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const { __ } = wp.i18n\r\nconst { registerBlockType } = wp.blocks\r\nconst { \r\n  useBlockProps,\r\n  RichText, \r\n  URLInputButton \r\n} = wp.blockEditor\r\nconst {\r\n  Button\r\n} = wp.components\r\nimport metadata from 'blocks/basegemini/block.json'\r\nimport './editor.scss'\r\n\r\nconst Edit = ({ attributes, setAttributes }) => {\r\n\r\n  const blockProps = useBlockProps()\r\n  const { \r\n    url, \r\n    context,\r\n    userInit\r\n  } = attributes\r\n\r\n  return (\r\n      <div {...blockProps}>\r\n        <div className=\"url\">\r\n          {__('URL actual: ', 'poeticsoft')}\r\n          <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">{url}</a>\r\n          <URLInputButton\r\n            url={url}\r\n            onChange={(newUrl, post) => setAttributes({ url: newUrl })}\r\n          />\r\n        </div>\r\n        <RichText\r\n          tagName=\"p\"\r\n          value={ context }\r\n          onChange={(newContext) => setAttributes({ context: newContext })}\r\n          placeholder={__('Context & Prompt', 'poeticsoft')}\r\n        />\r\n        <RichText\r\n          tagName=\"p\"\r\n          value={ userInit }\r\n          onChange={(newUserInit) => setAttributes({ userInit: newUserInit })}\r\n          placeholder={__('Init message', 'poeticsoft')}\r\n        />\r\n      </div>\r\n  )\r\n}\r\n\r\nregisterBlockType(\r\n  metadata.name,\r\n  {\r\n    edit: Edit,\r\n    save: () => null\r\n  }\r\n)"],"names":["__","wp","i18n","registerBlockType","blocks","_wp$blockEditor","blockEditor","useBlockProps","RichText","URLInputButton","Button","components","metadata","Edit","_ref","attributes","setAttributes","blockProps","url","context","userInit","React","createElement","className","href","target","rel","onChange","newUrl","post","tagName","value","newContext","placeholder","newUserInit","name","edit","save"],"sourceRoot":""}